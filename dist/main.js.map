{"version":3,"file":"main.js","mappings":"mCA0BAA,EAAOC,QA1BP,MACIC,YAAYC,GACRC,SAASC,iBAAiB,WAAYC,IAClC,OAAOA,EAAEC,KACL,IAAK,IACDJ,EAAOK,YACP,MACJ,IAAK,IACDL,EAAOM,WAEf,IAGJL,SAASC,iBAAiB,SAAUC,IAChC,OAAOA,EAAEC,KACL,IAAK,IACEJ,EAAOO,MAAQ,GAAGP,EAAOQ,OAC5B,MACJ,IAAK,IACDR,EAAOM,WAEf,GAER,E,kBC4CJT,EAAOC,QAnEP,MACIC,YAAYU,EAAaC,GAErBC,KAAKF,YAAcA,EACnBE,KAAKD,aAAeA,EAGpBC,KAAKC,OAAS,IACdD,KAAKE,MAAQ,GACbF,KAAKG,OAAS,GAGdH,KAAKI,EAAI,IACTJ,KAAKK,EAAI,IAGTL,KAAKM,UAAY,IAAIC,MACrBP,KAAKM,UAAUE,IAAM,wBAErBR,KAAKS,WAAa,GAClBT,KAAKU,YAAc,GAEnBV,KAAKW,QAAU,GACfX,KAAKY,QAAU,GAGfZ,KAAKa,UAAY,OACjBb,KAAKJ,MAAQ,EACbI,KAAKc,SAAW,CACpB,CAEAC,WAAWC,GAEP,IAAIC,EAA4B,SAAnBjB,KAAKa,UAAuBb,KAAKW,QAAUX,KAAKY,QAAU,EAEvEI,EAAIE,UAAUlB,KAAKM,UACX,EAAGW,EAAQjB,KAAKS,WAAYT,KAAKU,YACjCV,KAAKI,EAAGJ,KAAKK,EAAGL,KAAKE,MAAOF,KAAKG,OAC7C,CAEAR,WACIK,KAAKJ,MAAQI,KAAKc,SAClBd,KAAKa,UAAY,MACrB,CAEAnB,YACIM,KAAKJ,MAAQI,KAAKc,SAClBd,KAAKa,UAAY,OACrB,CAEAhB,OACIG,KAAKJ,MAAQ,CACjB,CAEAuB,aACInB,KAAKI,GAAKJ,KAAKJ,MAGXI,KAAKI,EAAI,IAAGJ,KAAKI,EAAI,GAGpBJ,KAAKI,EAAIJ,KAAKJ,MAASI,KAAKF,cAC7BE,KAAKI,EAAIJ,KAAKF,YAAcE,KAAKE,MAEzC,E,GC/DAkB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAapC,QAGrB,IAAID,EAASkC,EAAyBE,GAAY,CAGjDnC,QAAS,CAAC,GAOX,OAHAsC,EAAoBH,GAAUpC,EAAQA,EAAOC,QAASkC,GAG/CnC,EAAOC,OACf,E,WCtBA,MAAMuC,EAASC,EAAQ,KACjBC,EAAaD,EAAQ,KAE3BrC,SAASC,iBAAiB,oBAAoB,KAC1C,IACIyB,EADS1B,SAASuC,eAAe,WACpBC,WAAW,MAIxBzC,EAAS,IAAIqC,EAHG,IACC,KAGrB,IAAIE,EAAWvC,GAMnB,SAAkBA,EAAQ2B,GACtBA,EAAIe,UAAU,EAAG,EAAGjC,YAAaC,cAEjCV,EAAO8B,aACP9B,EAAO0B,WAAWC,GAElBgB,sBAAsBC,KAC1B,CAXIC,CAAS7C,EAAO2B,EAAI,G","sources":["webpack://shooter/./src/scripts/controller.js","webpack://shooter/./src/scripts/player.js","webpack://shooter/webpack/bootstrap","webpack://shooter/./src/index.js"],"sourcesContent":["class Controller {\n    constructor(player){\n        document.addEventListener('keydown', (e) => {\n            switch(e.key){\n                case \"d\":\n                    player.moveRight()\n                    break\n                case \"a\":\n                    player.moveLeft()\n                    break\n            }\n        })\n\n        document.addEventListener('keyup', (e) => {\n            switch(e.key){\n                case \"d\":\n                    if(player.speed > 0) player.stop()\n                    break\n                case \"a\":\n                    player.moveLeft()\n                    break\n            }\n        })\n    }\n}\n\nmodule.exports = Controller","class Player {\n    constructor(canvasWidth, canvasHeight) {\n        // canvas width and height\n        this.canvasWidth = canvasWidth;\n        this.canvasHeight = canvasHeight;\n        \n        // player size\n        this.ground = 100\n        this.width = 50\n        this.height = 50\n\n        // starting position\n        this.x = 100\n        this.y = 100\n\n        // player image\n        this.playerImg = new Image();\n        this.playerImg.src = 'src/images/player.png'\n\n        this.imageWidth = 13\n        this.imageHeight = 30\n        \n        this.imageYL = 90\n        this.imageYR = 30\n\n        // movement logic\n        this.direction = \"left\"\n        this.speed = 0\n        this.maxSpeed = 3\n    }\n\n    drawPlayer(ctx){\n        // ctx.drawImage(image, imageX, imageY, imageWidth, imageHeight, this.x, this.y, this.width, this.height);\n        let imageY = this.direction === \"left\" ? this.imageYL : this.imageYR - 5\n\n        ctx.drawImage(this.playerImg, \n                0, imageY, this.imageWidth, this.imageHeight, \n                this.x, this.y, this.width, this.height);\n    }\n\n    moveLeft(){\n        this.speed = this.maxSpeed\n        this.direction = \"left\"\n    }\n\n    moveRight(){\n        this.speed = this.maxSpeed\n        this.direction = \"right\"\n    }\n\n    stop(){\n        this.speed = 0\n    }\n\n    movePlayer(){\n        this.x += this.speed\n\n        // constraint of hitting boundary to the left side\n        if (this.x < 0) this.x = 0\n\n        // constraint of hitting boundary to the right side\n        if ((this.x + this.speed) > this.canvasWidth) {\n            this.x = this.canvasWidth - this.width\n        }   \n    }\n}\n\nmodule.exports = Player","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const Player = require(\"./scripts/player\")\nconst Controller = require(\"./scripts/controller\")\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let canvas = document.getElementById('canvas1')\n    let ctx = canvas.getContext('2d')\n    const canvasWidth = 1000;\n    const canvasHeight = 500;\n\n    let player = new Player(canvasWidth, canvasHeight)\n    new Controller(player)\n\n    drawLoop(player,ctx)\n})\n\n\nfunction drawLoop(player, ctx) {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight)\n\n    player.movePlayer()\n    player.drawPlayer(ctx)\n    \n    requestAnimationFrame(loop)\n}"],"names":["module","exports","constructor","player","document","addEventListener","e","key","moveRight","moveLeft","speed","stop","canvasWidth","canvasHeight","this","ground","width","height","x","y","playerImg","Image","src","imageWidth","imageHeight","imageYL","imageYR","direction","maxSpeed","drawPlayer","ctx","imageY","drawImage","movePlayer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","Player","require","Controller","getElementById","getContext","clearRect","requestAnimationFrame","loop","drawLoop"],"sourceRoot":""}